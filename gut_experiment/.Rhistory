bias <- bias[,2,]/bias[,1,]
bias <- log2(bias)
bias <- bias %>%
gather_array(val, coord, iter) %>%
group_by(coord) %>%
summarise_posterior(val) %>%
ungroup() %>%
mutate(coord = coord.names[coord])
p <- bias %>%
mutate(sig = ifelse(sign(p2.5)==sign(p97.5), TRUE, FALSE)) %>%
arrange(mean) %>%
mutate(rank = 1:n()) %>%
mutate(rank2 = ifelse((sig & (rank >66) )| (sig & (rank < 4)) , coord, "")) %>%
mutate(coord = factor(coord, levels=coord[order(mean)])) %>%
mutate(rank2 = focus.names[rank2]) %>%
ggplot(aes(x = coord, y=mean)) +
geom_hline(yintercept=0) +
geom_pointrange(aes(ymin=p2.5, ymax=p97.5, color=sig)) +
geom_label_repel(aes(label=rank2), xlim=c(6, 65), size=3) +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = c("grey", "black")) +
ylab("Cycle 35 - Cycle 0") #+
p
p <- bias %>%
mutate(sig = ifelse(sign(p2.5)==sign(p97.5), TRUE, FALSE)) %>%
arrange(mean) %>%
mutate(rank = 1:n()) %>%
mutate(rank2 = ifelse((sig & (rank >66) )| (sig & (rank < 4)) , coord, "")) %>%
mutate(coord = factor(coord, levels=coord[order(mean)])) %>%
mutate(rank2 = focus.names[rank2]) %>%
ggplot(aes(x = coord, y=mean)) +
geom_hline(yintercept=0) +
geom_pointrange(aes(ymin=p2.5, ymax=p97.5, color=sig)) +
geom_label_repel(aes(label=rank2), xlim=c(6, 65), size=3) +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = c("grey", "black")) +
ylab(expression(R^2)) #+
p
legend.position = "none") +
ylab(expression(log[2]) #+
theme_minimal() +
p
panel.grid.major.x = element_blank(),
p <- bias %>%
mutate(sig = ifelse(sign(p2.5)==sign(p97.5), TRUE, FALSE)) %>%
arrange(mean) %>%
mutate(rank = 1:n()) %>%
mutate(rank2 = ifelse((sig & (rank >66) )| (sig & (rank < 4)) , coord, "")) %>%
mutate(coord = factor(coord, levels=coord[order(mean)])) %>%
mutate(rank2 = focus.names[rank2]) %>%
ggplot(aes(x = coord, y=mean)) +
geom_hline(yintercept=0) +
geom_pointrange(aes(ymin=p2.5, ymax=p97.5, color=sig)) +
geom_label_repel(aes(label=rank2), xlim=c(6, 65), size=3) +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = c("grey", "black")) +
ylab(expression(log[2])) #+
p
p <- bias %>%
mutate(sig = ifelse(sign(p2.5)==sign(p97.5), TRUE, FALSE)) %>%
arrange(mean) %>%
mutate(rank = 1:n()) %>%
mutate(rank2 = ifelse((sig & (rank >66) )| (sig & (rank < 4)) , coord, "")) %>%
mutate(coord = factor(coord, levels=coord[order(mean)])) %>%
mutate(rank2 = focus.names[rank2]) %>%
ggplot(aes(x = coord, y=mean)) +
geom_hline(yintercept=0) +
geom_pointrange(aes(ymin=p2.5, ymax=p97.5, color=sig)) +
geom_label_repel(aes(label=rank2), xlim=c(6, 65), size=3) +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = c("grey", "black")) +
ylab(expression(log[2] frac(taxon proportion at cycle 35, taxon proportion at cycle 35))) #+
p <- bias %>%
mutate(sig = ifelse(sign(p2.5)==sign(p97.5), TRUE, FALSE)) %>%
arrange(mean) %>%
mutate(rank = 1:n()) %>%
mutate(rank2 = ifelse((sig & (rank >66) )| (sig & (rank < 4)) , coord, "")) %>%
mutate(coord = factor(coord, levels=coord[order(mean)])) %>%
mutate(rank2 = focus.names[rank2]) %>%
ggplot(aes(x = coord, y=mean)) +
geom_hline(yintercept=0) +
geom_pointrange(aes(ymin=p2.5, ymax=p97.5, color=sig)) +
geom_label_repel(aes(label=rank2), xlim=c(6, 65), size=3) +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = c("grey", "black")) +
ylab(expression(log[2] frac("taxon proportion at cycle 35", "taxon proportion at cycle 35"))) #+
bias %>%
mutate(sig = ifelse(sign(p2.5)==sign(p97.5), TRUE, FALSE)) %>%
arrange(mean) %>%
mutate(rank = 1:n()) %>%
mutate(rank2 = ifelse((sig & (rank >66) )| (sig & (rank < 4)) , coord, "")) %>%
mutate(coord = factor(coord, levels=coord[order(mean)])) %>%
mutate(rank2 = focus.names[rank2]) %>%
ggplot(aes(x = coord, y=mean)) +
geom_hline(yintercept=0) +
geom_pointrange(aes(ymin=p2.5, ymax=p97.5, color=sig)) +
geom_label_repel(aes(label=rank2), xlim=c(6, 65), size=3) +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = c("grey", "black")) +
ylab(expression(log[2] frac("taxon proportion at cycle 35", "taxon proportion at cycle 35")))
p <- bias %>%
mutate(sig = ifelse(sign(p2.5)==sign(p97.5), TRUE, FALSE)) %>%
arrange(mean) %>%
mutate(rank = 1:n()) %>%
mutate(rank2 = ifelse((sig & (rank >66) )| (sig & (rank < 4)) , coord, "")) %>%
mutate(coord = factor(coord, levels=coord[order(mean)])) %>%
mutate(rank2 = focus.names[rank2]) %>%
ggplot(aes(x = coord, y=mean)) +
geom_hline(yintercept=0) +
geom_pointrange(aes(ymin=p2.5, ymax=p97.5, color=sig)) +
geom_label_repel(aes(label=rank2), xlim=c(6, 65), size=3) +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = c("grey", "black")) +
ylab(expression(log[2] frac(a, b))) #+
ylab(expression(log[2] frac(a, b)) #+
p <- bias %>%
mutate(sig = ifelse(sign(p2.5)==sign(p97.5), TRUE, FALSE)) %>%
arrange(mean) %>%
mutate(rank = 1:n()) %>%
mutate(rank2 = ifelse((sig & (rank >66) )| (sig & (rank < 4)) , coord, "")) %>%
mutate(coord = factor(coord, levels=coord[order(mean)])) %>%
mutate(rank2 = focus.names[rank2]) %>%
ggplot(aes(x = coord, y=mean)) +
geom_hline(yintercept=0) +
geom_pointrange(aes(ymin=p2.5, ymax=p97.5, color=sig)) +
geom_label_repel(aes(label=rank2), xlim=c(6, 65), size=3) +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = c("grey", "black")) +
ylab(expression(log[2] frac(a, b))) #+
p <- bias %>%
mutate(sig = ifelse(sign(p2.5)==sign(p97.5), TRUE, FALSE)) %>%
arrange(mean) %>%
mutate(rank = 1:n()) %>%
mutate(rank2 = ifelse((sig & (rank >66) )| (sig & (rank < 4)) , coord, "")) %>%
mutate(coord = factor(coord, levels=coord[order(mean)])) %>%
mutate(rank2 = focus.names[rank2]) %>%
ggplot(aes(x = coord, y=mean)) +
geom_hline(yintercept=0) +
geom_pointrange(aes(ymin=p2.5, ymax=p97.5, color=sig)) +
geom_label_repel(aes(label=rank2), xlim=c(6, 65), size=3) +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = c("grey", "black")) +
ylab(expression(log[2] frac(a,b))) #+
p <- bias %>%
mutate(sig = ifelse(sign(p2.5)==sign(p97.5), TRUE, FALSE)) %>%
arrange(mean) %>%
mutate(rank = 1:n()) %>%
mutate(rank2 = ifelse((sig & (rank >66) )| (sig & (rank < 4)) , coord, "")) %>%
mutate(coord = factor(coord, levels=coord[order(mean)])) %>%
mutate(rank2 = focus.names[rank2]) %>%
ggplot(aes(x = coord, y=mean)) +
geom_hline(yintercept=0) +
geom_pointrange(aes(ymin=p2.5, ymax=p97.5, color=sig)) +
geom_label_repel(aes(label=rank2), xlim=c(6, 65), size=3) +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = c("grey", "black")) +
ylab(expression(log[2] over(a,b))) #+
p <- bias %>%
mutate(sig = ifelse(sign(p2.5)==sign(p97.5), TRUE, FALSE)) %>%
arrange(mean) %>%
mutate(rank = 1:n()) %>%
mutate(rank2 = ifelse((sig & (rank >66) )| (sig & (rank < 4)) , coord, "")) %>%
mutate(coord = factor(coord, levels=coord[order(mean)])) %>%
mutate(rank2 = focus.names[rank2]) %>%
ggplot(aes(x = coord, y=mean)) +
geom_hline(yintercept=0) +
geom_pointrange(aes(ymin=p2.5, ymax=p97.5, color=sig)) +
geom_label_repel(aes(label=rank2), xlim=c(6, 65), size=3) +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = c("grey", "black")) +
ylab(expression(log[2]~over(a,b))) #+
p
p <- bias %>%
mutate(sig = ifelse(sign(p2.5)==sign(p97.5), TRUE, FALSE)) %>%
arrange(mean) %>%
mutate(rank = 1:n()) %>%
mutate(rank2 = ifelse((sig & (rank >66) )| (sig & (rank < 4)) , coord, "")) %>%
mutate(coord = factor(coord, levels=coord[order(mean)])) %>%
mutate(rank2 = focus.names[rank2]) %>%
ggplot(aes(x = coord, y=mean)) +
geom_hline(yintercept=0) +
geom_pointrange(aes(ymin=p2.5, ymax=p97.5, color=sig)) +
geom_label_repel(aes(label=rank2), xlim=c(6, 65), size=3) +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = c("grey", "black")) +
ylab(expression(log[2]~over(taxon proportion~at~cycle~35,taxon~proportion~at~cycle~0))) #+
p <- bias %>%
mutate(sig = ifelse(sign(p2.5)==sign(p97.5), TRUE, FALSE)) %>%
arrange(mean) %>%
mutate(rank = 1:n()) %>%
mutate(rank2 = ifelse((sig & (rank >66) )| (sig & (rank < 4)) , coord, "")) %>%
mutate(coord = factor(coord, levels=coord[order(mean)])) %>%
mutate(rank2 = focus.names[rank2]) %>%
ggplot(aes(x = coord, y=mean)) +
geom_hline(yintercept=0) +
geom_pointrange(aes(ymin=p2.5, ymax=p97.5, color=sig)) +
geom_label_repel(aes(label=rank2), xlim=c(6, 65), size=3) +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = c("grey", "black")) +
ylab(expression(log[2]~over(taxon proportion~at~cycle~35,taxon~proportion~at~cycle~0))) #+
bias %>%
mutate(sig = ifelse(sign(p2.5)==sign(p97.5), TRUE, FALSE)) %>%
arrange(mean) %>%
mutate(rank = 1:n()) %>%
mutate(rank2 = ifelse((sig & (rank >66) )| (sig & (rank < 4)) , coord, "")) %>%
mutate(coord = factor(coord, levels=coord[order(mean)])) %>%
mutate(rank2 = focus.names[rank2]) %>%
ggplot(aes(x = coord, y=mean)) +
geom_hline(yintercept=0) +
geom_pointrange(aes(ymin=p2.5, ymax=p97.5, color=sig)) +
geom_label_repel(aes(label=rank2), xlim=c(6, 65), size=3) +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = c("grey", "black")) +
ylab(expression(log[2]~over(taxon proportion~at~cycle~35,taxon~proportion~at~cycle~0)))
p <- bias %>%
mutate(sig = ifelse(sign(p2.5)==sign(p97.5), TRUE, FALSE)) %>%
arrange(mean) %>%
mutate(rank = 1:n()) %>%
mutate(rank2 = ifelse((sig & (rank >66) )| (sig & (rank < 4)) , coord, "")) %>%
mutate(coord = factor(coord, levels=coord[order(mean)])) %>%
mutate(rank2 = focus.names[rank2]) %>%
ggplot(aes(x = coord, y=mean)) +
geom_hline(yintercept=0) +
geom_pointrange(aes(ymin=p2.5, ymax=p97.5, color=sig)) +
geom_label_repel(aes(label=rank2), xlim=c(6, 65), size=3) +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = c("grey", "black")) +
ylab(expression(log[2]~frac(taxon proportion~at~cycle~35,taxon~proportion~at~cycle~0))) #+
p <- bias %>%
mutate(sig = ifelse(sign(p2.5)==sign(p97.5), TRUE, FALSE)) %>%
arrange(mean) %>%
mutate(rank = 1:n()) %>%
mutate(rank2 = ifelse((sig & (rank >66) )| (sig & (rank < 4)) , coord, "")) %>%
mutate(coord = factor(coord, levels=coord[order(mean)])) %>%
mutate(rank2 = focus.names[rank2]) %>%
ggplot(aes(x = coord, y=mean)) +
geom_hline(yintercept=0) +
geom_pointrange(aes(ymin=p2.5, ymax=p97.5, color=sig)) +
geom_label_repel(aes(label=rank2), xlim=c(6, 65), size=3) +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = c("grey", "black")) +
ylab(expression(log[2]~frac(taxon~proportion~at~cycle~35,taxon~proportion~at~cycle~0))) #+
p
p <- bias %>%
mutate(sig = ifelse(sign(p2.5)==sign(p97.5), TRUE, FALSE)) %>%
arrange(mean) %>%
mutate(rank = 1:n()) %>%
mutate(rank2 = ifelse((sig & (rank >66) )| (sig & (rank < 4)) , coord, "")) %>%
mutate(coord = factor(coord, levels=coord[order(mean)])) %>%
mutate(rank2 = focus.names[rank2]) %>%
ggplot(aes(x = coord, y=mean)) +
geom_hline(yintercept=0) +
geom_pointrange(aes(ymin=p2.5, ymax=p97.5, color=sig)) +
geom_label_repel(aes(label=rank2), xlim=c(6, 65), size=3) +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = c("grey", "black")) +
ylab(expression(log[2]~frac(proportion~~at~~cycle~~35,proportion~~at~~cycle~~0))) #+
p
p <- bias %>%
mutate(sig = ifelse(sign(p2.5)==sign(p97.5), TRUE, FALSE)) %>%
arrange(mean) %>%
mutate(rank = 1:n()) %>%
mutate(rank2 = ifelse((sig & (rank >66) )| (sig & (rank < 4)) , coord, "")) %>%
mutate(coord = factor(coord, levels=coord[order(mean)])) %>%
mutate(rank2 = focus.names[rank2]) %>%
ggplot(aes(x = coord, y=mean)) +
geom_hline(yintercept=0) +
geom_pointrange(aes(ymin=p2.5, ymax=p97.5, color=sig)) +
geom_label_repel(aes(label=rank2), xlim=c(6, 65), size=3) +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = c("grey", "black")) +
ylab(expression(log[2]~over(proportion~~at~~cycle~~35,proportion~~at~~cycle~~0))) #+
p
p
p <- bias %>%
mutate(sig = ifelse(sign(p2.5)==sign(p97.5), TRUE, FALSE)) %>%
arrange(mean) %>%
mutate(rank = 1:n()) %>%
mutate(rank2 = ifelse((sig & (rank >66) )| (sig & (rank < 4)) , coord, "")) %>%
mutate(coord = factor(coord, levels=coord[order(mean)])) %>%
mutate(rank2 = focus.names[rank2]) %>%
ggplot(aes(x = coord, y=mean)) +
geom_hline(yintercept=0) +
geom_pointrange(aes(ymin=p2.5, ymax=p97.5, color=sig)) +
geom_label_repel(aes(label=rank2), xlim=c(6, 65), size=3) +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = c("grey", "black")) +
ylab(expression(log[2]~over(Proportion~~at~~Cycle~~35,Proportion~~at~~Cycle~~0))) #+
p
p
p <- bias %>%
mutate(sig = ifelse(sign(p2.5)==sign(p97.5), TRUE, FALSE)) %>%
arrange(mean) %>%
mutate(rank = 1:n()) %>%
mutate(rank2 = ifelse((sig & (rank >66) )| (sig & (rank < 4)) , coord, "")) %>%
mutate(coord = factor(coord, levels=coord[order(mean)])) %>%
mutate(rank2 = focus.names[rank2]) %>%
ggplot(aes(x = coord, y=mean)) +
geom_hline(yintercept=0) +
geom_pointrange(aes(ymin=p2.5, ymax=p97.5, color=sig)) +
geom_label_repel(aes(label=rank2), xlim=c(6, 65), size=3) +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = c("grey", "black")) +
ylab(expression(log[2]~over(Proportion~~at~~Cycle~~35,Proportion~~at~~Cycle~~0))) #+
p
LambdaX_focused <- predict(fit, newdata=cbind(c(1, 0, 0, 0, 0, 0, 0, 0),
c(1, 0, 0, 0, 35, 0, 0, 0)),
pars="LambdaX", use_names=FALSE)
bias <- clrInv_array(LambdaX_focused, 1)
bias <- bias[,2,]/bias[,1,]
bias <- log2(bias)
bias <- bias %>%
gather_array(val, coord, iter) %>%
group_by(coord) %>%
summarise_posterior(val) %>%
ungroup() %>%
mutate(coord = coord.names[coord])
p <- bias %>%
mutate(sig = ifelse(sign(p2.5)==sign(p97.5), TRUE, FALSE)) %>%
arrange(mean) %>%
mutate(rank = 1:n()) %>%
mutate(rank2 = ifelse((sig & (rank >66) )| (sig & (rank < 4)) , coord, "")) %>%
mutate(coord = factor(coord, levels=coord[order(mean)])) %>%
mutate(rank2 = focus.names[rank2]) %>%
ggplot(aes(x = coord, y=mean)) +
geom_hline(yintercept=0) +
geom_pointrange(aes(ymin=p2.5, ymax=p97.5, color=sig)) +
geom_label_repel(aes(label=rank2), xlim=c(6, 65), size=3) +
theme_minimal() +
theme(axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none") +
scale_color_manual(values = c("grey", "black")) +
ylab(expression(log[2]~over(Proportion~~at~~Cycle~~35,Proportion~~at~~Cycle~~0))) #+
#scale_y_continuous(sec.axis=sec_axis(~.*1/sqrt(2), name="Evidence Information"))
ggsave("real_data_bias_summary.pdf", plot=p, width=7, height=4, units="in")
library(tidyverse)
library(driver) # devtools::install_github("jsilve24/driver")
library(mongrel) # devtools::install_github("jsilve24/mongrel")
library(phyloseq)
library(NVC) # devtools::install_github("jsilve24/NVC")
library(DECIPHER) # for computing sequence similarity
library(tidybayes)
library(ggforce)
library(ggrepel)
library(Biostrings)
set.seed(18845)
setwd("~/Research/pcrbias/results/2019-02-22_mongrel_first_experiment/")
# load data ---------------------------------------------------------------
# load primary phyloseq object
ps <- readRDS("../dada2/phyloseq.rds")
# load added metadata
path.addedmeta <- "~/Research/pcrbias/data/metadata_added_variables/2017.08.14MappingFile_addedmetadata.txt"
sample_data(ps) <- phyloseq::import_qiime_sample_data(path.addedmeta)
# remove samples with fewer than 5000 counts
total.reads <- sum(sample_sums(ps))
ps <- prune_samples(sample_sums(ps)>5000, ps)
sum(sample_sums(ps))/total.reads
# Consolidate to Genus level
ps <- tax_glom(ps, "Genus")
# agglom taxa with too few counts to new category called "other"
tmp <- taxa_names(ps)
d <- as(otu_table(ps), "matrix")
d <- apply(d, 2, function(x) sum(x > 3) > 0.30*length(x))
tmp <- tmp[!d]
ps <- merge_taxa(ps, tmp, 1)
other <- taxa_names(ps)[taxa_names(ps) %in% tmp]
tmp <- taxa_names(ps)
tmp[tmp==other] <- "other"
taxa_names(ps) <- tmp
rm(tmp, d, other)
ps
table(tax_table(ps))
table(tax_table(ps)[,"Family"])
table(tax_table(ps)[,"Phylum"])
library(tidyverse)
library(driver) # devtools::install_github("jsilve24/driver")
library(mongrel) # devtools::install_github("jsilve24/mongrel")
library(phyloseq)
library(NVC) # devtools::install_github("jsilve24/NVC")
library(DECIPHER) # for computing sequence similarity
library(tidybayes)
library(ggforce)
library(ggrepel)
library(Biostrings)
set.seed(18845)
setwd("~/Research/pcrbias/results/2019-03-25_github/gut_experiment/")
# load primary phyloseq object
ps <- readRDS("../dada2_gut/phyloseq.rds")
